% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOptim_CheckOptimFuncParameters.R
\name{checkEvalFun}
\alias{checkEvalFun}
\title{Check a custom performance evaluation function}
\usage{
checkEvalFun(funToTest, nClassType = "undefined", verbose = TRUE)
}
\arguments{
\item{funToTest}{A function to test}

\item{nClassType}{A string defining if the classification is \code{"single-class"} or \code{"multi-class"}}

\item{verbose}{Print messages?}
}
\value{
Logical. If \code{TRUE} the function is considered valid.
}
\description{
Checks if a given custom evaluation function, using two vectors (respectively, for observed and 
predicted values), is able to produce a valid result. See details for more info.
}
\details{
To be considered valid the input function for single-class must have:

\itemize{
   \item Have at least two inputs arguments;
   \item Produce a non-null and valid numerical result;
   \item A scalar output;
   \item An attribute named \code{'thresh'} defining the numerical threshold to 
   binarize  the classifier predictions (i.e., to convert from continuous probability 
   to discrete {0,1}).
}

Valid multi-class functions' must have:

\itemize{
   \item Have at least two inputs arguments;
   \item Produce a non-null and valid numerical result;
   \item A scalar output.
}
}
\examples{

accMultiClass <- function(obs, pred){
d <- sum(diag(as.matrix(table(obs, pred))))
s <- length(obs)
return(d/s)
}

accMultiClass(1:10, 1:10)

checkEvalFun(funToTest=accMultiClass, nClassType="multi-class", verbose=TRUE)

}
