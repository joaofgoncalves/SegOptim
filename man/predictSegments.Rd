% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOptim_RasterOutputs.R
\name{predictSegments}
\alias{predictSegments}
\title{Predict class labels for image segments}
\usage{
predictSegments(
  classifierObj,
  calData,
  rstSegm,
  predictFor = "all",
  filename = NULL,
  verbose = TRUE,
  na.rm = TRUE,
  forceWriteByLine = FALSE,
  ...
)
}
\arguments{
\item{classifierObj}{An object of class \code{SOptim.Classifier} containing a classification algorithm 
generated by function \code{\link{calibrateClassifier}} with option \code{runFullCalibration = TRUE}.}

\item{calData}{An object of class \code{SOptim.CalData} generated by function \code{\link{prepareCalData}} containing 
calibration data for train segments and the entire image.}

\item{rstSegm}{A string defining the path to the raster with segment IDs, a \code{rasterLayer} object or 
a \code{SOptim.SegmentationResult} object (generated by any segmentation function (check \link{segmentationGeneric}).}

\item{predictFor}{Either option \code{"train"} which predicts class labels only for train segments 
or option \code{"all"} which predicts for all existing segments in \code{rstSegm} (default: all).}

\item{filename}{A filename/path used to write the output raster (default: NULL).}

\item{verbose}{Print comments with function progress? (default: TRUE).}

\item{na.rm}{Remove NA's? (default: TRUE).}

\item{forceWriteByLine}{Use memory-safe writing of raster output by line? (default: FALSE). 
If \code{forceWriteByLine = TRUE}, then \code{filename} must define a valid file path.}

\item{...}{Additional arguments for \code{\link[raster]{writeRaster}} function except \code{datatype} 
which is already internally set to 'INT4U'.}
}
\value{
An object of class \code{RasterLayer} containing the predicted class labels for 
each image segment. If filename is defined the functon will write a file containing the output 
raster. The output data type is INT4U (see \code{\link[raster]{dataType}} for more details) which means 
negative values for class labels are not valid.
}
\description{
This function uses an input \code{SOptim.Classifier} object to predict class labels for train or all segments in the 
input segmented image.
}
\details{
By default the function uses the classifier ran with the 'full' dataset (i.e., no train/test splits) 
for making class label predictions. In case of single-class problems the threshold that maximizes the selected 
evaluation metric (check \code{evalMetric} in \code{\link{calibrateClassifier}}) is used to dichotomize predictions.   
For multi-class problems the output class label is set for the one with highest probability value.
}
