% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SOptim_VectorDataIO.R
\name{gdal_polygonizeR}
\alias{gdal_polygonizeR}
\title{Convert a raster dataset into polygon}
\usage{
gdal_polygonizeR(
  x,
  outshape = NULL,
  pyGDALpolygonize = NULL,
  pythonPath = NULL,
  readpoly = TRUE,
  readAs = "sf",
  verbose = TRUE,
  stringsAsFactors = FALSE
)
}
\arguments{
\item{x}{An input path to the raster dataset that will be converted to polygon coverage 
or a \code{Raster.*} object.}

\item{outshape}{Output shapefile path. Note that the output is by deafult an ESRI shapefile}

\item{pyGDALpolygonize}{File path to the gdal_polygonize.py script file}

\item{pythonPath}{Folder path to the python executable (e.g., \code{"C:/Anaconda2"})}

\item{readpoly}{Read the polygon output data into R? (default: TRUE)}

\item{readAs}{Read as? If \code{readpoly = TRUE} then data may be read as simple features 
(option: "sf" the deafult) or as sp objects (option: "sp")}

\item{verbose}{Print messages? (default: TRUE)}

\item{stringsAsFactors}{Read text data as factors? (default: FALSE)}
}
\value{
An \code{sf} or \code{sp} object, or \code{NULL} if \code{readpoly = FALSE}
}
\description{
This utility function uses gdal_polygonize.py to create vector polygons for all 
connected regions of pixels in the raster sharing a common pixel value. Each 
polygon is created with an attribute indicating the pixel value of that polygon. 
A raster mask may also be provided to determine which pixels are eligible for processing. 
This function will create the output vector datasource if it does not already exist. 
The python interface uses the GDALPolygonize function which details can be foud here:  
\url{https://gdal.org/programs/gdal_polygonize.html}. The output format is ESRI Shapefile.
}
